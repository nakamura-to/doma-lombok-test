buildscript {
    ext {
        springBootVersion = '1.1.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 
apply plugin: 'war'

/*
jar {
    baseName = 'demo'
    version =  '1.0'
}*/
war {
    baseName = 'demo'
    version =  '1.0'
}
sourceCompatibility = 1.7
targetCompatibility = 1.7

// for Doma
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
processResources.destinationDir = compileJava.destinationDir
compileJava.dependsOn processResources

def aptGeneratePath = '.apt_generated'
compileJava.options.compilerArgs = ['-s', aptGeneratePath]
new File(aptGeneratePath).mkdirs()

repositories {
    mavenCentral()
    maven {url 'http://maven.seasar.org/maven2'}
}

configurations {
    providedRuntime
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-aop")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.hibernate:hibernate-validator")
    compile("org.springframework:spring-jdbc")
    compile("org.seasar.doma:doma:1.+")
    compile("org.seasar.container:s2-tiger:2.4.47")
    compile("org.projectlombok:lombok:1.14.8")
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
    //testCompile("org.springframework.boot:spring-boot-starter-test")
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.12'
}

